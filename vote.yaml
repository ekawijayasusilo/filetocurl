--- 
apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: redis
  name: redis
spec: 
  clusterIP: None
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  selector: 
    app: redis
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redis--init01
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis--init01
        image: redis:alpine
        ports:
        - containerPort: 6379
          name: redis
        resources:
            limits:
              cpu: "100m"

--- 
apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: db
  name: db
spec: 
  clusterIP: None
  ports: 
    - 
      name: db
      port: 5432
      targetPort: 5432
  selector: 
    app: db
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: db--init01
  # labels:
  #   app: db
spec:
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - 
          name: db--init01
          image: postgres:9.4
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: db
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: postgres-pv-claim

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: result
  labels:
    app: result
spec:
  type: NodePort
  ports:
    - port: 5001
      targetPort: 80
      name: result
      nodePort: 30001
      protocol: TCP
  selector:
    app: result
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: result--init01
  labels:
    app: result
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
      - name: result--init01
        image: dockersamples/examplevotingapp_result:before
        ports:
        - containerPort: 80
          name: result
        resources:
            limits:
              cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: vote
  labels:
    apps: vote
spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: 80
      name: vote
      nodePort: 30000
      protocol: TCP
  selector:
    app: vote
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: vote--init01
  labels:
    app: vote
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: vote
    spec:
      containers:
        - name: vote--init01
          image: ekawijayasusilo/example_vote_wo_cookies
          ports:
            - containerPort: 80
              name: vote
          resources:
            limits:
              cpu: "300m"
--- 
apiVersion: v1
kind: Service
metadata: 
  labels: 
    apps: worker
  name: worker
spec: 
  clusterIP: None
  selector: 
    app: worker
--- 
apiVersion: apps/v1beta1
kind: Deployment
metadata: 
  labels: 
    app: worker
  name: worker--init01
spec: 
  replicas: 1
  template: 
    metadata: 
      labels: 
        app: worker
    spec: 
      containers: 
        - image: dockersamples/examplevotingapp_worker
          name: worker--init01
          resources:
            limits:
              cpu: "200m"
